---
# This role installs icinga2 master for the monitoring nodes.

# TODO
# - Install icinga2 headless
# - Install icinga2web
# -- Pass in RDS db vars

- hosts: apt-ops
  gather_facts: True
  vars_files:
      - "group_vars/vault.yml"
  vars:
      playbook_name: icinga2-master
      # Icinga2
      icinga2_conf_global: |
         include "constants.conf"
         include "zones.conf"
         include <itl>
         include <plugins>
         include <plugins-contrib>
         include "features-enabled/*.conf"

      # Icingaweb2
      icingaweb2_local_db: False
      web_server_daemon: nginx

      # InfluxDB
      icinga2_local_db: False

      #Nginx
      install_php: true
      nginx_vhosts:
          - listen: "443 ssl"
            server_name: "icinga.aptrust.org"
            root: /usr/share/icingaweb2/public
            extra_parameters: |
              index index.php;
              location = /favicon.ico {
                  log_not_found off;
                  access_log off;
                  expires max;
              }
              location ~ /\. {
                  deny all;
                  access_log off;
                  log_not_found off;
              }

              location ~ \..*/.*\.php$ {
                  return 403;
              }
              if (!-d $request_filename) {
                rewrite ^/(.+)/$ /$1 permanent;
              }

              location / {
                try_files $1 $uri $uri/ /index.php$is_args$args;
              }

              location ~ ^/index\.php(.*)$ {
                fastcgi_index index.php;
                include /etc/nginx/fastcgi_params;
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php5-fpm.sock; #Replace with the port if php fpm is configured to run on port.
                fastcgi_param SCRIPT_FILENAME /usr/share/icingaweb2/public/index.php; #Replace with icinga2 web index.php file path.
                fastcgi_param ICINGAWEB_CONFIGDIR /etc/icingaweb2;
                fastcgi_param REMOTE_USER $remote_user;
              }
                ssl    on;
                # SSL Chain if Nginx, SSL cert if Apache2
                ssl_certificate    {{ssl_cert_path}};
                ssl_certificate_key {{ ssl_key_path }};

  roles:
    - {role: icinga2-ansible/icinga2-ansible-no-ui, tags: icinga2}
# TODO: Enable once config is in group_vars
#    - {role: ansible-influxdb, tags: influxdb}
    - {role: icinga2-ansible/icinga2-ansible-web2-ui, tags: icingaweb2}
    - {role: tersmitten.composer, tags: [composer, nginx], when: ansible_distribution_release == 'xenial'}
    - {role: cd3ef.nginx, tags: nginx}
  tasks:
    - name: Enable {{ item }} feature
      become: true
      shell: icinga2 feature enable "{{ item }}"
      with_items:
        - api
        - influxdb
        - notification
        - syslog
        - mainlog
        #    - perfdata

# Generate ticket on master to use for client nodes
# - hosts: "{{ masteritem | default('monitoring_servers')}}"
#  tags: ['nodeaction']
#  vars:
#   hostitem: apt-prod-repo.aptrust.org
#  tasks:
#   - name: generate ticket on the icinga master and save it as a variable
     # shell: /usr/sbin/icinga2 pki ticket --cn {{ masteritem }}
     #     shell: /usr/sbin/icinga2 pki ticket --cn {{ nodeitem }}.aptrust.org
     #  register: ticket
     # tags: nodeaction
