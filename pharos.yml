---
-   hosts: pharos-servers
    vars_files:
        - "group_vars/vault.yml"

    environment: "{{ruby_env}}"

    vars:
        playbook_name: pharos
        ansistrano_deploy_to: "/var/www/{{ansible_fqdn}}/{{playbook_name}}"
        ansistrano_deploy_via: "git"
        ansistrano_git_repo: "git@github.com:APTrust/pharos.git"
        ansistrano_git_branch: "develop"
        # Note: key_path rewritten to support ssh key as variable not file.
        ansistrano_git_identity_key_path: "{{aptdeploy_sshkey_private}}"
        ansistrano_shared_paths: ["log"]
        ansistrano_keep_releases: 3
        # Check disabled to allow for symlink to central log directory for
        # log file persistence
        ansistrano_ensure_shared_paths_exist: no
        # ansistrano_ensure_basedirs_shared_paths_exist: no

        # Pharos Role
        pharos_app_root: "{{ ansistrano_deploy_to }}/current"
        pharos_environment: "{{ruby_env}}"

        # NGINX Webserver
        install_passenger: true

        nginx_vhosts:
          - listen: "80 default_server"
            server_name: "_"
            return: 301 https://$host$request_uri
          - listen: "443 ssl"
            server_name: "{{ansible_fqdn}}"
            root: "{{ ansistrano_deploy_to }}/current/public"
            access_log: "/var/log/nginx/{{ansible_fqdn}}_access.log"
            error_log: "/var/log/nginx/{{ansible_fqdn}}_error.log"
            extra_parameters: |
                passenger_enabled on;
                passenger_base_uri /;
                passenger_app_root {{ pharos_app_root }};
                passenger_app_env {{ RAILS_ENV }};
                passenger_friendly_error_pages off;

                ssl    on;
                # SSL Chain if Nginx, SSL cert if Apache2
                ssl_certificate    {{ssl_cert_path}};
                ssl_certificate_key {{ ssl_key_path }};
        nginx_client_max_body_size: 0

        # RBenv
        rbenv:
          env: user
          version: v1.0.0
          ruby_version: 2.3.1
        rbenv_users:
            - "{{system_default_user}}"
#            - adiamond
#            - cd3ef
        rbenv_group: 'deploy'

        # Central logs on efs mount
        # Note: Role doesn't allow for multiple logdirs at the moment.
        # Requires refactoring.
        centrallogs:
            # - { name: nginx, logdir: /var/log/nginx, servicename: nginx}
            # - { name: unattended-upgrades, logdir: /var/log/unattended-upgradescopy }
          - {name: pharos, logdir: "/var/www/{{ansible_fqdn}}/pharos/shared/log", servicename: nginx}

    roles:
      - {role: common, tags: common}
      - {role: zzet.rbenv, tags: rbenv}
      - {role: cd3ef.nginx, tags: [nginx, passenger, nginx-passenger]}
      - {role: carlosbuenosvinos.ansistrano-deploy, tags: [deploy, pharos]}
      - {role: aptrust.pharos, tags: [pharos, deploy]}
    tasks:

    - name: Slack to all
      slack:
        token: "{{slack_token}}"
        msg: "{{playbook_name}} deployment on {{ inventory_hostname }} completed"
        icon_emoji: ":dog:"
        channel: 'ops'
      tags: [pharos,slack, deploy]
