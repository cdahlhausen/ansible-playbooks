---
- name: Install Mysql prerequisite
  apt: name=python-mysqldb

- name: Install Icinga2 IDO modules on Debian family
  shell: apt-get install --assume-no icinga2-ido-mysql
  tags: assumeno

# Create DB on RDS if it doesn't exist.
# Note: When command is changed to modify, comment [db_name, subnet, tags] out.
- name: Create DB Instance on RDS
  rds:
    command: create
    instance_name: "icinga2"
    instance_type: "{{ pharos_rds_instance_type | default('db.t2.micro') }}"
    size: "{{icinga2_web2_db_size | default('10') }}"
    username: "{{icinga2_web2_db_user}}"
    password: "{{icinga2_web2_db_pass}}"
    db_name: "{{icinga2_web2_db}}"
    db_engine: MySQL
    multi_zone: "{{icinga_rds_multi_az | default('no')}}"
    region: "{{icinga_rds_region | default('us-east-1')}}"
# TODO: dependent on environment. set default to demo
# Note: security group name doesn't work, only id. Security groups have to be
#       configured manually via AWS web console.
    vpc_security_groups: "{{  icinga_vpc_sec_group | default('sg-af43acde') }}"
    subnet: "{{ icinga_rds_subnet | default('demo') }}"
# Note: Timeout is set high since inital RDS creation may take a while.
    wait_timeout: 600
    wait: yes
    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    backup_retention: "{{icinga2_rds_backup_retention | default('1')}}"
    backup_window: '10:00-10:30'
    maint_window: 'Tue:10:30-Tue:11:00'
    tags:
        Environment: "{{APP_ENV}}"
  when: icingaweb2_local_db == False

- name: Create a IDO Database for Icinga2
  mysql_db: name={{ icinga2_db }}
            login_host="{{icinga2_db_host}}"
            login_user="{{icinga2_db_user}}"
            login_password="{{icinga2_db_pass}}"
            state=present
  register: icinga_ido_db

- name: Create Icinga2 IDO Database User and configure Grants
  mysql_user: name={{ icinga2_db_user }}
              password={{ icinga2_db_pass }}
              login_host="{{icinga2_db_host}}"
              login_user="{{icinga2_db_user}}"
              login_password="{{icinga2_db_pass}}"
              state=present
              priv="{{ icinga2_db }}.*:GRANT,INSERT,SELECT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"

- name: Import the IDO Schema on Icinga Web Database (only once)
  mysql_db: name="{{ icinga2_db }}"
            state=import
            login_host="{{icinga2_db_host}}"
            login_user="{{icinga2_db_user}}"
            login_password="{{icinga2_db_pass}}"
            target="{{ icinga2_web_mysql_schema_debian }}"
  when: icinga_ido_db.changed == true

- name: Configure Icinga2 Ido Mysql Feature
  template: src=ido-mysql.conf.j2
            dest="{{ icinga2_ido_mysql_conf }}"
            backup=yes
            owner=nagios
            group=nagios
            mode=0640

- name: Enable Icinga2 Ido Mysql Feature
  command: "icinga2 feature enable ido-mysql"
  register: features_result
  changed_when: "'for these changes to take effect' in features_result.stdout"
  notify:
   - restart icinga2

- name: Install Icinga Web2 on Debian family
  apt: name={{ item.package }}
       state=latest
  with_items: '{{ icinga2_web2_ui_deb }}'
  tags: icinga2-ansible-web2-ui-install

- name: Create a Web Database for Icinga2
  mysql_db: name={{ icinga2_web2_db }}
            login_host="{{icinga2_db_host}}"
            login_user="{{icinga2_db_user}}"
            login_password="{{icinga2_db_pass}}"
            state=present
  register: icinga_web_db

- name: Create Icinga2 Web Database User and configure Grants
  mysql_user: name={{ icinga2_web2_db_user }}
              password={{ icinga2_web2_db_pass }}
              login_host="{{icinga2_db_host}}"
              login_user="{{icinga2_db_user}}"
              login_password="{{icinga2_db_pass}}"
              state=present
              priv="{{ icinga2_web2_db }}.*:GRANT,INSERT,SELECT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"

- name: Import the Web Schema on Icinga Web Database (only once)
  mysql_db: name={{ icinga2_web2_db }}
            login_host="{{icinga2_db_host}}"
            login_user="{{icinga2_db_user}}"
            login_password="{{icinga2_db_pass}}"
            state=import
            target={{ icinga2_web2_mysql_schema_debian }}
  when: icinga_web_db.changed == true

- name: Define web server daemon package.
  set_fact:
    web_server_daemon: "{{ __web_server_daemon_deb }}"
  when: web_server_daemon is not defined

- name: Restart {{web_server_daemon}} and Icinga2 to Apply the Configuration
  service: name={{ item }}
           state=restarted
           enabled=yes
  with_items:
    - "{{web_server_daemon}}"
    - icinga2

- name: Create icingaweb2 group
  group:
    name: icingaweb2
    system: yes
    state: present

- name: Add user www-data to group icingaweb2
  user: name=www-data
        groups=icingaweb2

- name: Adjust Directory Owner and Group
  file: path=/etc/icingaweb2/modules owner=www-data group=icingaweb2 mode=0755
        state=directory
        recurse=yes

- name: Create Directory Owner and Group
  file: path=/etc/icingaweb2/modules/{{ item }} owner=www-data group=icingaweb2 mode=0755
        state=directory
  with_items:
    - monitoring
    - translation

- name: Setup icingaweb2 config directory
  shell: icingacli setup config directory --group icingaweb2;
  tags: newsteps

- name: Create setup token
  shell: icingacli setup token create;
  register: tokenme
  tags: newsteps

- name: Debug token
  debug: var=tokenme
  tags: newsteps

- name: Add configuration files
  template:
    src: "{{item}}"
    dest: "/etc/icingaweb2/{{item}}"
    backup: yes
    owner: www-data
    group: icingaweb2
    mode: 0640
  with_items:
    - authentication.ini
    - config.ini
    - groups.ini
    - resources.ini
    - roles.ini
  tags: icingaweb2config

- name: Enable monitoring module
  file:
    src: /usr/share/icingaweb2/modules/monitoring
    dest: /etc/icingaweb2/enabledModules/monitoring
    state: link

- name: Add configuration files
  template:
    src: "{{item}}"
    dest: "/etc/icingaweb2/modules/monitoring/{{item}}"
    backup: yes
    owner: www-data
    group: icingaweb2
    mode: 0755
  with_items:
    - backends.ini
    - commandtransports.ini
  tags: icingaweb2config

- name: Icinga Web2 Installation finished (Debian)
  debug: msg="Now generate a token with 'icingacli setup token create' and visit http://SERVERIP/icingaweb2/setup to continue the installation"
  tags: icinga2-ansible-web2-ui-install

